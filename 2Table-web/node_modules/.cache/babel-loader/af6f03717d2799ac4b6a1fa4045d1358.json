{"ast":null,"code":"import _defineProperty from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/src/components/Login.js\";\nimport React, { Component } from \"react\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport { API_ROOT } from '../constants';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { Form, Icon, Input, Button, message, Select } from 'antd';\nimport $ from 'jquery';\nvar FormItem = Form.Item;\nvar Option = Select.Option;\n\nvar NormalLoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NormalLoginForm, _Component);\n\n  function NormalLoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, NormalLoginForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NormalLoginForm).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.id, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          $.ajax({\n            url: \"\".concat(API_ROOT, \"/login\"),\n            method: 'POST',\n            data: JSON.stringify({\n              Id: values.UserID,\n              password: values.password,\n              clientType: values.clientType\n            })\n          }).then(function (response) {\n            _this.props.handleLogin(response, Id);\n          }, function (error) {\n            message.error(error.responseText);\n          }).catch(function (error) {\n            console.log(error);\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      userID: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(NormalLoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, getFieldDecorator('UserID', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, getFieldDecorator('clientType', {\n        rules: [{\n          required: true,\n          message: 'Please select a client type!'\n        }]\n      })(React.createElement(Select, {\n        placeholder: \"Please select a type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"User\"), React.createElement(Option, {\n        value: \"restaurant\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Restaurant\")))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Log in\"), \"Or \", React.createElement(Link, {\n        to: \"/register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"register now!\")));\n    }\n  }]);\n\n  return NormalLoginForm;\n}(Component);\n\nNormalLoginForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired\n};\nexport { NormalLoginForm as default };\nexport var Login = Form.create()(NormalLoginForm);","map":{"version":3,"sources":["/Users/yangsirui/Downloads/2Table-web-master/2Table-web/src/components/Login.js"],"names":["React","Component","FormGroup","FormControl","ControlLabel","API_ROOT","Link","PropTypes","Form","Icon","Input","Button","message","Select","$","FormItem","Item","Option","NormalLoginForm","props","handleChange","event","setState","target","id","value","handleSubmit","preventDefault","form","validateFields","err","values","console","log","ajax","url","method","data","JSON","stringify","Id","UserID","password","clientType","then","response","handleLogin","error","responseText","catch","state","userID","getFieldDecorator","rules","required","color","propTypes","func","isRequired","Login","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {  FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport { API_ROOT } from '../constants';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { Form, Icon, Input, Button, message, Select } from 'antd';\nimport $ from 'jquery';\n\nconst FormItem = Form.Item;\nconst { Option } = Select;\n\nexport default class NormalLoginForm extends Component {\n\n  static propTypes = {\n     handleLogin: PropTypes.func.isRequired,\n   }\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userID: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n     this.props.form.validateFields((err, values) => {\n         if (!err) {\n               console.log('Received values of form: ', values);\n        $.ajax({\n                 url: `${API_ROOT}/login`,\n                 method: 'POST',\n                 data: JSON.stringify({\n                    Id: values.UserID,\n                    password: values.password,\n                    clientType: values.clientType,\n                 }),\n         }).then((response) => {\n            this.props.handleLogin(response, Id);\n         },(error) => {\n            message.error(error.responseText);\n         }).catch((error) => {\n                     console.log(error);\n                     });\n         }\n      });\n    }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n        <Form onSubmit={this.handleSubmit} className=\"Login\">\n            <FormItem>\n                {getFieldDecorator('UserID', {\n                    rules: [{ required: true, message: 'Please input your username!' }],\n                })(\n                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n                )}\n            </FormItem>\n            <FormItem>\n                {getFieldDecorator('password', {\n                    rules: [{ required: true, message: 'Please input your Password!' }],\n                 })(\n                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n                 )}\n            </FormItem>\n            <FormItem>\n            {getFieldDecorator('clientType', {\n                 rules: [\n                    { required: true, message: 'Please select a client type!' },\n                        ],\n                      })(\n                        <Select placeholder=\"Please select a type\">\n                          <Option value=\"user\">User</Option>\n                          <Option value=\"restaurant\">Restaurant</Option>\n                        </Select>\n                      )}\n            </FormItem>\n            <FormItem>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                    Log in\n                </Button>\n                Or <Link to=\"/register\">register now!</Link>\n            </FormItem>\n            </Form>\n            );\n        }\n    }\n\nexport const Login = Form.create()(NormalLoginForm);"]},"metadata":{},"sourceType":"module"}