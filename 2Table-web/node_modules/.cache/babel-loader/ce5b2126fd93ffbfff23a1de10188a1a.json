{"ast":null,"code":"import _classCallCheck from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/src/components/Upload.js\";\nimport { FilePond, registerPlugin } from 'react-filepond'; // Import FilePond styles\n\nimport 'filepond/dist/filepond.min.css';\nimport React from 'react';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\n/*\n    We need to register the required plugins to do image manipulation and previewing.\n    */\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\nexport var Upload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Upload, _React$Component);\n\n  function Upload(props) {\n    var _this;\n\n    _classCallCheck(this, Upload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Upload).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Upload, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(FilePond, {\n        ref: function ref(_ref) {\n          return _this2.pond = _ref;\n        },\n        allowMultiple: false,\n        onupdatefiles: function onupdatefiles() {\n          _this2.props.importFile();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Upload;\n}(React.Component);","map":{"version":3,"sources":["/Users/yangsirui/Downloads/2Table-web-master/2Table-web/src/components/Upload.js"],"names":["FilePond","registerPlugin","React","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","Upload","props","state","ref","pond","importFile","Component"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,cAAnB,QAAyC,gBAAzC,C,CACA;;AACA,OAAO,gCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kCAAP,MAA+C,wCAA/C;AACA,OAAOC,0BAAP,MAAuC,+BAAvC;AACA,OAAO,sEAAP;AACA;;;;AAGIH,cAAc,CACbE,kCADa,EACuBC,0BADvB,CAAd;AAIJ,WAAaC,MAAb;AAAA;AAAA;AAAA;;AACA,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACX,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFW;AAIZ;;AALP;AAAA;AAAA,6BAOQ;AAAA;;AAEJ,aACY,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAE,aAAAC,IAAG;AAAA,iBAAI,MAAI,CAACC,IAAL,GAAYD,IAAhB;AAAA,SAAlB;AACU,QAAA,aAAa,EAAE,KADzB;AAEU,QAAA,aAAa,EAAG,yBAAM;AAAC,UAAA,MAAI,CAACF,KAAL,CAAWI,UAAX;AAAwB,SAFzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADZ;AAKH;AAdD;;AAAA;AAAA,EAA4BR,KAAK,CAACS,SAAlC","sourcesContent":["import { FilePond, registerPlugin } from 'react-filepond';\n// Import FilePond styles\nimport 'filepond/dist/filepond.min.css';\nimport React from 'react';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\n/*\n    We need to register the required plugins to do image manipulation and previewing.\n    */\n    registerPlugin(\n    \tFilePondPluginImageExifOrientation, FilePondPluginImagePreview\n    );\n\nexport class Upload extends React.Component {\nconstructor(props) {\n        super(props)\n        this.state = {\n        }\n      }\n\nrender(){\n\n    return(\n                <FilePond ref={ref => this.pond = ref}\n                          allowMultiple={false}\n                          onupdatefiles= {() => {this.props.importFile()}}>\n                </FilePond>);\n};\n}"]},"metadata":{},"sourceType":"module"}