{"ast":null,"code":"import _classCallCheck from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/src/components/Reserve.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { API_ROOT } from '../constants';\nimport $ from 'jquery';\nimport { message } from 'antd';\nimport PickyDateTime from 'react-picky-date-time';\nvar style = {\n  height: '200px',\n  width: '200px',\n  margin: '2rem'\n};\nvar button_style = {\n  margin: '0.5rem'\n};\nexport var Reserve =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Reserve, _React$Component);\n\n  function Reserve(props) {\n    var _this;\n\n    _classCallCheck(this, Reserve);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Reserve).call(this, props));\n    _this.state = {\n      id: _this.props.resId,\n      resInfo: {},\n      showPickyDateTime: true,\n      date: new Date().getDate(),\n      month: new Date().getMonth() + 1,\n      year: new Date().getFullYear(),\n      hour: new Date().getHours(),\n      meridiem: 'PM'\n    };\n    _this.handleReserve = _this.handleReserve.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Reserve, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      $.ajax({\n        url: \"\".concat(API_ROOT, \"/searchRes?Id=\").concat(this.state.id),\n        method: 'GET'\n      }).then(function (response) {\n        _this2.setState({\n          resInfo: JSON.parse(response)\n        });\n\n        console.log(JSON.parse(response));\n      }, function (error) {\n        message.error(error.responseText);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"getTimeSlot\",\n    value: function getTimeSlot() {\n      //获取timeslot，database里存了这个吗？如果有用id把它调出来，我这里用了tempTime测试\n      return tempTime;\n    }\n  }, {\n    key: \"handleReserve\",\n    value: function handleReserve(e) {\n      // 用ajax检查capacity然后reserve餐馆，我直接写了alert测试用\n      e.preventDefault();\n      alert(\"sucess\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          showPickyDateTime = _this$state.showPickyDateTime,\n          date = _this$state.date,\n          month = _this$state.month,\n          year = _this$state.year,\n          hour = _this$state.hour,\n          minute = _this$state.minute,\n          second = _this$state.second,\n          meridiem = _this$state.meridiem;\n      var resInfo = this.state.resInfo;\n      var slots = this.getTimeSlot();\n      console.log(this.state);\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, resInfo.restaurant), React.createElement(\"img\", {\n        src: \"https://i.loli.net/2019/04/15/5cb3e0210edb5.jpg\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, resInfo.address, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), \"contact: \", resInfo.phone)), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(PickyDateTime, {\n        size: \"m\",\n        mode: 1,\n        show: showPickyDateTime,\n        locale: \"en-us\",\n        defaultTime: \"\".concat(hour, \":0:0 \").concat(meridiem) // \"HH:MM:SS AM\"\n        ,\n        defaultDate: \"\".concat(month, \"/\").concat(date, \"/\").concat(year) // \"MM/DD/YYYY\"\n        ,\n        onClose: function onClose() {\n          return _this3.setState({\n            showPickyDateTime: false\n          });\n        },\n        onYearPicked: function onYearPicked(res) {\n          return _this3.onYearPicked(res);\n        },\n        onMonthPicked: function onMonthPicked(res) {\n          return _this3.onMonthPicked(res);\n        },\n        onDatePicked: function onDatePicked(res) {\n          return _this3.onDatePicked(res);\n        },\n        onResetDate: function onResetDate(res) {\n          return _this3.onResetDate(res);\n        },\n        onResetDefaultDate: function onResetDefaultDate(res) {\n          return _this3.onResetDefaultDate(res);\n        },\n        onSecondChange: function onSecondChange(res) {\n          return _this3.onSecondChange(res);\n        },\n        onMinuteChange: function onMinuteChange(res) {\n          return _this3.onMinuteChange(res);\n        },\n        onHourChange: function onHourChange(res) {\n          return _this3.onHourChange(res);\n        },\n        onMeridiemChange: function onMeridiemChange(res) {\n          return _this3.onMeridiemChange(res);\n        },\n        onResetTime: function onResetTime(res) {\n          return _this3.onResetTime(res);\n        },\n        onResetDefaultTime: function onResetDefaultTime(res) {\n          return _this3.onResetDefaultTime(res);\n        },\n        onClearTime: function onClearTime(res) {\n          return _this3.onClearTime(res);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Reserve;\n}(React.Component);","map":{"version":3,"sources":["/Users/yangsirui/Downloads/2Table-web-master/2Table-web/src/components/Reserve.js"],"names":["React","Container","Row","Col","Button","API_ROOT","$","message","PickyDateTime","style","height","width","margin","button_style","Reserve","props","state","id","resId","resInfo","showPickyDateTime","date","Date","getDate","month","getMonth","year","getFullYear","hour","getHours","meridiem","handleReserve","bind","ajax","url","method","then","response","setState","JSON","parse","console","log","error","responseText","catch","tempTime","e","preventDefault","alert","minute","second","slots","getTimeSlot","restaurant","address","phone","res","onYearPicked","onMonthPicked","onDatePicked","onResetDate","onResetDefaultDate","onSecondChange","onMinuteChange","onHourChange","onMeridiemChange","onResetTime","onResetDefaultTime","onClearTime","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AAGA,IAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE,OADE;AAEVC,EAAAA,KAAK,EAAE,OAFG;AAGVC,EAAAA,MAAM,EAAE;AAHE,CAAd;AAMA,IAAMC,YAAY,GAAG;AACjBD,EAAAA,MAAM,EAAE;AADS,CAArB;AAKA,WAAaE,OAAb;AAAA;AAAA;AAAA;;AACE,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAE,MAAKF,KAAL,CAAWG,KADN;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,iBAAiB,EAAE,IAHV;AAITC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EAJG;AAKTC,MAAAA,KAAK,EAAE,IAAIF,IAAJ,GAAWG,QAAX,KAAwB,CALtB;AAMTC,MAAAA,IAAI,EAAE,IAAIJ,IAAJ,GAAWK,WAAX,EANG;AAOTC,MAAAA,IAAI,EAAE,IAAIN,IAAJ,GAAWO,QAAX,EAPG;AAQTC,MAAAA,QAAQ,EAAE;AARD,KAAb;AAUA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,uDAArB;AAZiB;AAalB;;AAdH;AAAA;AAAA,wCAiBsB;AAAA;;AAClB1B,MAAAA,CAAC,CAAC2B,IAAF,CAAO;AACCC,QAAAA,GAAG,YAAK7B,QAAL,2BAA8B,KAAKW,KAAL,CAAWC,EAAzC,CADJ;AAECkB,QAAAA,MAAM,EAAE;AAFT,OAAP,EAGWC,IAHX,CAGgB,UAACC,QAAD,EAAc;AAClB,QAAA,MAAI,CAACC,QAAL,CAAc;AACVnB,UAAAA,OAAO,EAAGoB,IAAI,CAACC,KAAL,CAAWH,QAAX;AADA,SAAd;;AAGEI,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAL,CAAWH,QAAX,CAAZ;AACL,OART,EAQU,UAACM,KAAD,EAAW;AACLpC,QAAAA,OAAO,CAACoC,KAAR,CAAcA,KAAK,CAACC,YAApB;AACP,OAVT,EAUWC,KAVX,CAUiB,UAACF,KAAD,EAAW;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACP,OAZT;AAaD;AA/BH;AAAA;AAAA,kCAiCgB;AACV;AACA,aAAOG,QAAP;AACH;AApCH;AAAA;AAAA,kCAsCgBC,CAtChB,EAsCmB;AACb;AAEFA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,KAAK,CAAC,QAAD,CAAL;AACD;AA3CH;AAAA;AAAA,6BA6CW;AAAA;;AAAA,wBAUD,KAAKjC,KAVJ;AAAA,UAEHI,iBAFG,eAEHA,iBAFG;AAAA,UAGHC,IAHG,eAGHA,IAHG;AAAA,UAIHG,KAJG,eAIHA,KAJG;AAAA,UAKHE,IALG,eAKHA,IALG;AAAA,UAMHE,IANG,eAMHA,IANG;AAAA,UAOHsB,MAPG,eAOHA,MAPG;AAAA,UAQHC,MARG,eAQHA,MARG;AAAA,UASHrB,QATG,eASHA,QATG;AAWL,UAAMX,OAAO,GAAG,KAAKH,KAAL,CAAWG,OAA3B;AACA,UAAMiC,KAAK,GAAG,KAAKC,WAAL,EAAd;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,KAAjB;AACF,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKG,OAAO,CAACmC,UAAb,CAFJ,EAGI;AAAK,QAAA,GAAG,EAAC,iDAAT;AAA2D,QAAA,KAAK,EAAE7C,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKU,OAAO,CAACoC,OAAb,EACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eACmBpC,OAAO,CAACqC,KAD3B,CAJJ,CADJ,EAQI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,aAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,IAAI,EAAE,CAFR;AAGE,QAAA,IAAI,EAAEpC,iBAHR;AAIE,QAAA,MAAM,EAAC,OAJT;AAKE,QAAA,WAAW,YAAKQ,IAAL,kBAAiBE,QAAjB,CALb,CAK0C;AAL1C;AAME,QAAA,WAAW,YAAKN,KAAL,cAAcH,IAAd,cAAsBK,IAAtB,CANb,CAM2C;AAN3C;AAOE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACY,QAAL,CAAc;AAAElB,YAAAA,iBAAiB,EAAE;AAArB,WAAd,CAAN;AAAA,SAPX;AAQE,QAAA,YAAY,EAAE,sBAAAqC,GAAG;AAAA,iBAAI,MAAI,CAACC,YAAL,CAAkBD,GAAlB,CAAJ;AAAA,SARnB;AASE,QAAA,aAAa,EAAE,uBAAAA,GAAG;AAAA,iBAAI,MAAI,CAACE,aAAL,CAAmBF,GAAnB,CAAJ;AAAA,SATpB;AAUE,QAAA,YAAY,EAAE,sBAAAA,GAAG;AAAA,iBAAI,MAAI,CAACG,YAAL,CAAkBH,GAAlB,CAAJ;AAAA,SAVnB;AAWE,QAAA,WAAW,EAAE,qBAAAA,GAAG;AAAA,iBAAI,MAAI,CAACI,WAAL,CAAiBJ,GAAjB,CAAJ;AAAA,SAXlB;AAYE,QAAA,kBAAkB,EAAE,4BAAAA,GAAG;AAAA,iBAAI,MAAI,CAACK,kBAAL,CAAwBL,GAAxB,CAAJ;AAAA,SAZzB;AAaE,QAAA,cAAc,EAAE,wBAAAA,GAAG;AAAA,iBAAI,MAAI,CAACM,cAAL,CAAoBN,GAApB,CAAJ;AAAA,SAbrB;AAcE,QAAA,cAAc,EAAE,wBAAAA,GAAG;AAAA,iBAAI,MAAI,CAACO,cAAL,CAAoBP,GAApB,CAAJ;AAAA,SAdrB;AAeE,QAAA,YAAY,EAAE,sBAAAA,GAAG;AAAA,iBAAI,MAAI,CAACQ,YAAL,CAAkBR,GAAlB,CAAJ;AAAA,SAfnB;AAgBE,QAAA,gBAAgB,EAAE,0BAAAA,GAAG;AAAA,iBAAI,MAAI,CAACS,gBAAL,CAAsBT,GAAtB,CAAJ;AAAA,SAhBvB;AAiBE,QAAA,WAAW,EAAE,qBAAAA,GAAG;AAAA,iBAAI,MAAI,CAACU,WAAL,CAAiBV,GAAjB,CAAJ;AAAA,SAjBlB;AAkBE,QAAA,kBAAkB,EAAE,4BAAAA,GAAG;AAAA,iBAAI,MAAI,CAACW,kBAAL,CAAwBX,GAAxB,CAAJ;AAAA,SAlBzB;AAmBE,QAAA,WAAW,EAAE,qBAAAA,GAAG;AAAA,iBAAI,MAAI,CAACY,WAAL,CAAiBZ,GAAjB,CAAJ;AAAA,SAnBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR,CARJ,CADJ,CADJ;AAoCD;AA/FH;;AAAA;AAAA,EAA6BzD,KAAK,CAACsE,SAAnC","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport { API_ROOT } from '../constants';\nimport $ from 'jquery';\nimport { message } from 'antd';\nimport PickyDateTime from 'react-picky-date-time';\n\n\nconst style = {\n    height: '200px',\n    width: '200px',\n    margin: '2rem'\n};\n\nconst button_style = {\n    margin: '0.5rem'\n};\n  \n\nexport class Reserve extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n        id: this.props.resId,\n        resInfo: {},\n        showPickyDateTime: true,\n        date: new Date().getDate(),\n        month: new Date().getMonth() + 1,\n        year: new Date().getFullYear(),\n        hour: new Date().getHours(),\n        meridiem: 'PM'\n    }\n    this.handleReserve = this.handleReserve.bind(this);\n  }\n\n\n  componentDidMount() {\n    $.ajax({\n            url: `${API_ROOT}/searchRes?Id=${this.state.id}`,\n            method: 'GET',\n            }).then((response) => {\n                this.setState({\n                    resInfo : JSON.parse(response)\n                });\n                  console.log(JSON.parse(response));\n            },(error) => {\n                    message.error(error.responseText);\n            }).catch((error) => {\n                    console.log(error);\n            });\n  }\n\n  getTimeSlot() {\n      //获取timeslot，database里存了这个吗？如果有用id把它调出来，我这里用了tempTime测试\n      return tempTime;\n  }\n\n  handleReserve(e) {\n      // 用ajax检查capacity然后reserve餐馆，我直接写了alert测试用\n      \n    e.preventDefault();\n    alert(\"sucess\")\n  }\n\n  render() {\n      const {\n        showPickyDateTime,\n        date,\n        month,\n        year,\n        hour,\n        minute,\n        second,\n        meridiem\n      } = this.state;\n      const resInfo = this.state.resInfo;\n      const slots = this.getTimeSlot();\n      console.log(this.state);\n    return (\n        <Container>\n            <Row>\n                <Col>\n                {/* Col 1 for the Name and Picture of the Restaurant<br /> */}\n                    <h1>{resInfo.restaurant}</h1>\n                    <img src=\"https://i.loli.net/2019/04/15/5cb3e0210edb5.jpg\" style={style} />\n                    <h4>{resInfo.address}\n                        <br/>contact: {resInfo.phone}</h4>\n                    </Col>\n                <Col>\n                        <PickyDateTime\n                          size=\"m\"\n                          mode={1}\n                          show={showPickyDateTime}\n                          locale=\"en-us\"\n                          defaultTime={`${hour}:0:0 ${meridiem}`} // \"HH:MM:SS AM\"\n                          defaultDate={`${month}/${date}/${year}`} // \"MM/DD/YYYY\"\n                          onClose={() => this.setState({ showPickyDateTime: false })}\n                          onYearPicked={res => this.onYearPicked(res)}\n                          onMonthPicked={res => this.onMonthPicked(res)}\n                          onDatePicked={res => this.onDatePicked(res)}\n                          onResetDate={res => this.onResetDate(res)}\n                          onResetDefaultDate={res => this.onResetDefaultDate(res)}\n                          onSecondChange={res => this.onSecondChange(res)}\n                          onMinuteChange={res => this.onMinuteChange(res)}\n                          onHourChange={res => this.onHourChange(res)}\n                          onMeridiemChange={res => this.onMeridiemChange(res)}\n                          onResetTime={res => this.onResetTime(res)}\n                          onResetDefaultTime={res => this.onResetDefaultTime(res)}\n                          onClearTime={res => this.onClearTime(res)}\n                        />\n                </Col>\n            </Row>\n        </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}