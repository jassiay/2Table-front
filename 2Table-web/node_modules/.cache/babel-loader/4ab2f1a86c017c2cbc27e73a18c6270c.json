{"ast":null,"code":"import _classCallCheck from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yangsirui/Downloads/2Table-web-master/2Table-web/src/components/Register.js\";\nimport React from 'react';\nimport { Form, Input, Button, message, Select, Radio } from 'antd';\nimport $ from 'jquery';\nimport { API_ROOT } from '../constants';\nimport { Link } from 'react-router-dom';\nimport { Upload } from './Upload';\nvar FormItem = Form.Item;\nvar Option = Select.Option;\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nvar tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nvar RegistrationForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegistrationForm, _React$Component);\n\n  function RegistrationForm() {\n    var _this;\n\n    _classCallCheck(this, RegistrationForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegistrationForm).call(this));\n\n    _this.handleFormLayoutChange = function (e) {\n      _this.setState({\n        Client: e.target.value\n      });\n    };\n\n    _this.importFile = function (fileItems) {\n      var formData = new FormData();\n      formData.append('smfile', fileItems[0].file);\n      console.log(fileItems[0].file);\n      $.ajax({\n        url: \"https://sm.ms/api/upload\",\n        method: 'POST',\n        data: formData,\n        processData: false,\n        contentType: false\n      }).then(function (response) {\n        message.success(response.code);\n\n        _this.setState({\n          url: response.url\n        });\n\n        console.log(response.url);\n      }, function (error) {\n        message.error(error.responseText);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      var myHeaders = new Headers();\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n\n          if (_this.state.Client === 'User') {\n            $.ajax({\n              url: \"\".concat(API_ROOT, \"/register\"),\n              method: 'POST',\n              data: JSON.stringify({\n                client: _this.state.Client,\n                ID: values.UserID,\n                name: values.name,\n                phone: values.phone,\n                email: values.email,\n                password: values.password\n              })\n            }).then(function (response) {\n              message.success(response);\n            }, function (response) {\n              message.error(response.responseText);\n            }).catch(function (error) {\n              console.log(error);\n            });\n          } else {\n            $.ajax({\n              url: \"\".concat(API_ROOT, \"/register\"),\n              method: 'POST',\n              data: JSON.stringify({\n                client: _this.state.Client,\n                ID: values.RestaurantID,\n                name: values.name,\n                phone: values.phone,\n                email: values.email,\n                password: values.password,\n                address: values.address,\n                capacity: values.capacity\n              })\n            }).then(function (response) {\n              message.success(response);\n\n              _this.setState({\n                url: response.data.url\n              });\n\n              console.log(response.data.url);\n            }, function (error) {\n              message.error(error.responseText);\n            }).catch(function (error) {\n              console.log(error);\n            });\n          }\n        }\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    _this.getResItem = function () {\n      var getFieldDecorator = _this.props.form.getFieldDecorator;\n      var prefixSelector = getFieldDecorator('prefix', {\n        initialValue: '1'\n      })(React.createElement(Select, {\n        style: {\n          width: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"+1\"), React.createElement(Option, {\n        value: \"44\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"+44\"), React.createElement(Option, {\n        value: \"49\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"+49\"), React.createElement(Option, {\n        value: \"86\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"+86\"), React.createElement(Option, {\n        value: \"91\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"+91\")));\n      return React.createElement(React.Fragment, null, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"RestaurantID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), getFieldDecorator('RestaurantID', {\n        rules: [{\n          required: true,\n          message: 'Please input your RestaurantID!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          validator: _this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: _this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        onBlur: _this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Restaurant Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), getFieldDecorator('name', {\n        rules: [{\n          required: true,\n          message: 'Please Please input your restaurant\\'s name!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Phone Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), getFieldDecorator('phone', {\n        rules: [{\n          required: true,\n          message: 'Please Please input your phone number!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        addonBefore: prefixSelector,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Email Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), getFieldDecorator('email', {\n        rules: [{\n          required: true,\n          message: 'Please Please input your Email Address!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), getFieldDecorator('address', {\n        rules: [{\n          required: true,\n          message: 'Please Please input your Address!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Capacity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), getFieldDecorator('capacity', {\n        rules: [{\n          required: true,\n          message: 'Please Please input your capacity!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Profile Photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), getFieldDecorator('profile', {\n        rules: [{\n          required: true,\n          message: 'Please Please input your profile photo!',\n          whitespace: true\n        }]\n      })(React.createElement(Upload, {\n        importFile: _this.importFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"I already have an account, go back to \", React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"login\"))));\n    };\n\n    _this.getUserItem = function () {\n      var getFieldDecorator = _this.props.form.getFieldDecorator;\n      var prefixSelector = getFieldDecorator('prefix', {\n        initialValue: '1'\n      })(React.createElement(Select, {\n        style: {\n          width: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"+1\"), React.createElement(Option, {\n        value: \"44\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"+44\"), React.createElement(Option, {\n        value: \"49\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"+49\"), React.createElement(Option, {\n        value: \"86\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"+86\"), React.createElement(Option, {\n        value: \"91\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"+91\")));\n      return React.createElement(React.Fragment, null, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"UserID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }), getFieldDecorator('UserID', {\n        rules: [{\n          required: true,\n          message: 'Please input your userID!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }), getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          validator: _this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }), getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: _this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        onBlur: _this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), getFieldDecorator('name', {\n        rules: [{\n          required: true,\n          message: 'Please Please input your name!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Phone Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }), getFieldDecorator('phone', {\n        rules: [{\n          required: true,\n          message: 'Please Please input your phone number!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        addonBefore: prefixSelector,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Email Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }), getFieldDecorator('email', {\n        rules: [{\n          required: true,\n          message: 'Please Please input your Email Address!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Profile Photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }), getFieldDecorator('profile', {\n        rules: [{\n          required: true,\n          message: 'Please Please input your profile photo!',\n          whitespace: true\n        }]\n      })(React.createElement(Upload, {\n        importFile: _this.importFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"I already have an account, go back to \", React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"login\"))));\n    };\n\n    _this.state = {\n      Client: 'User',\n      confirmDirty: false,\n      autoCompleteResult: [],\n      url: 'https://i.loli.net/2019/04/25/5cc1780ba8f42.png'\n    };\n    return _this;\n  }\n\n  _createClass(RegistrationForm, [{\n    key: \"render\",\n    value: function render() {\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var Client = this.state.Client;\n      var Items = Client === 'User' ? this.getUserItem : this.getResItem;\n      return React.createElement(Form, {\n        client: Client,\n        onSubmit: this.handleSubmit,\n        className: \"register-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }), React.createElement(Radio.Group, {\n        defaultValue: \"User\",\n        onChange: this.handleFormLayoutChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(Radio.Button, {\n        value: \"User\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, \"User\"), React.createElement(Radio.Button, {\n        value: \"Restaurant\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"Restaurant\"))), React.createElement(Items, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RegistrationForm;\n}(React.Component);\n\nexport var Register = Form.create()(RegistrationForm);","map":{"version":3,"sources":["/Users/yangsirui/Downloads/2Table-web-master/2Table-web/src/components/Register.js"],"names":["React","Form","Input","Button","message","Select","Radio","$","API_ROOT","Link","Upload","FormItem","Item","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegistrationForm","handleFormLayoutChange","e","setState","Client","target","value","importFile","fileItems","formData","FormData","append","file","console","log","ajax","url","method","data","processData","contentType","then","response","success","code","error","responseText","catch","handleSubmit","myHeaders","Headers","preventDefault","props","form","validateFieldsAndScroll","err","values","state","JSON","stringify","client","ID","UserID","name","phone","email","password","RestaurantID","address","capacity","handleConfirmBlur","confirmDirty","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","getResItem","getFieldDecorator","prefixSelector","initialValue","width","rules","required","whitespace","validator","getUserItem","autoCompleteResult","Items","Component","Register","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Button, message,  Select, Radio } from 'antd';\nimport $ from 'jquery';\nimport { API_ROOT } from '../constants';\nimport { Link } from 'react-router-dom';\nimport {Upload} from './Upload';\n\nconst FormItem = Form.Item;\nconst { Option } = Select;\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\n\nclass RegistrationForm extends React.Component {\n\nconstructor() {\n  super();\n    this.state = {\n      Client: 'User',\n      confirmDirty: false,\n      autoCompleteResult: [],\n      url: 'https://i.loli.net/2019/04/25/5cc1780ba8f42.png',\n    };\n  }\n\n  handleFormLayoutChange = (e) => {\n      this.setState({ Client: e.target.value });\n  }\n\n    importFile = (fileItems) => {\n        const formData = new FormData();\n        formData.append('smfile', fileItems[0].file);\n        console.log(fileItems[0].file);\n        $.ajax({\n               url: `https://sm.ms/api/upload`,\n               method: 'POST',\n               data: formData,\n               processData: false,\n               contentType: false\n        }).then((response) => {\n             message.success(response.code);\n             this.setState({url : response.url});\n             console.log(response.url);\n        }, (error) => {\n            message.error(error.responseText);\n                    }).catch((error) => {\n                        console.log(error);\n                    });\n\n    }\n\n   handleSubmit = (e) => {\n     var myHeaders = new Headers();\n\n     e.preventDefault();\n     this.props.form.validateFieldsAndScroll((err, values) => {\n       if (!err) {\n         console.log('Received values of form: ', values);\n         if (this.state.Client === 'User'){\n            $.ajax({\n                url: `${API_ROOT}/register`,\n                method: 'POST',\n                data: JSON.stringify({\n                    client: this.state.Client,\n                    ID: values.UserID,\n                    name: values.name,\n                    phone: values.phone,\n                    email: values.email,\n                    password: values.password,\n                })\n            }).then((response) => {\n                message.success(response);\n            }, (response) => {\n                message.error(response.responseText);\n            }).catch((error) => {\n                console.log(error);\n            });\n       }else {\n            $.ajax({\n                url: `${API_ROOT}/register`,\n                method: 'POST',\n                data: JSON.stringify({\n                    client: this.state.Client,\n                    ID: values.RestaurantID,\n                    name: values.name,\n                    phone: values.phone,\n                    email: values.email,\n                    password: values.password,\n                    address: values.address,\n                    capacity: values.capacity,\n                })\n            }).then((response) => {\n                message.success(response);\n                this.setState({url : response.data.url});\n                console.log(response.data.url);\n            }, (error) => {\n                message.error(error.responseText);\n            }).catch((error) => {\n                console.log(error);\n            });\n       }\n       }\n     });\n   }\n\n   handleConfirmBlur = (e) => {\n     const value = e.target.value;\n     this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n   }\n\n   compareToFirstPassword = (rule, value, callback) => {\n     const form = this.props.form;\n     if (value && value !== form.getFieldValue('password')) {\n       callback('Two passwords that you enter is inconsistent!');\n     } else {\n       callback();\n     }\n   }\n\n\n   validateToNextPassword = (rule, value, callback) => {\n     const form = this.props.form;\n     if (value && this.state.confirmDirty) {\n       form.validateFields(['confirm'], { force: true });\n     }\n     callback();\n   }\n\n    getResItem = () => {\n        const { getFieldDecorator } = this.props.form;\n        const prefixSelector = getFieldDecorator('prefix', {\n            initialValue: '1',\n        })(\n            <Select style={{ width: 70 }}>\n            <Option value=\"1\">+1</Option>\n            <Option value=\"44\">+44</Option>\n            <Option value=\"49\">+49</Option>\n            <Option value=\"86\">+86</Option>\n            <Option value=\"91\">+91</Option>\n            </Select>\n        );\n\n        return (\n            <>\n                <FormItem\n                    {...formItemLayout}\n                    label=\"RestaurantID\"\n                >\n                {getFieldDecorator('RestaurantID', {\n                    rules: [{ required: true, message: 'Please input your RestaurantID!', whitespace: true }],\n                })(\n                    <Input />\n                )}\n                </FormItem>\n                <FormItem\n                    {...formItemLayout}\n                        label=\"Password\"\n                >\n                {getFieldDecorator('password', {\n                    rules: [{\n                        required: true, message: 'Please input your password!',\n                        }, {\n                        validator: this.validateToNextPassword,\n                        }],\n                })(\n                <Input type=\"password\" />\n                )}\n            </FormItem>\n                <FormItem\n                    {...formItemLayout}\n                         label=\"Confirm Password\"\n            >\n                {getFieldDecorator('confirm', {\n                    rules: [{\n                        required: true, message: 'Please confirm your password!',\n                    }, {\n                        validator: this.compareToFirstPassword,\n                    }],\n                })(\n                    <Input type=\"password\" onBlur={this.handleConfirmBlur} />\n                )}\n                </FormItem>\n                 <FormItem {...formItemLayout} label=\"Restaurant Name\">\n                    {getFieldDecorator('name', {\n                        rules: [{\n                            required: true, message: 'Please Please input your restaurant\\'s name!',\n                            whitespace: true }]\n                        }) (\n                        <Input />\n                         )}\n                 </FormItem>\n                  <FormItem {...formItemLayout} label=\"Phone Number\">\n                                   {getFieldDecorator('phone', {\n                                     rules: [{\n                                         required: true, message: 'Please Please input your phone number!',\n                                     whitespace: true }]\n                                   }) (\n                                      <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\n                                   )}\n                         </FormItem>\n                         <FormItem {...formItemLayout} label=\"Email Address\">\n                                   {getFieldDecorator('email', {\n                                      rules: [{\n                                         required: true, message: 'Please Please input your Email Address!',\n                                      whitespace: true }]\n                                   }) (\n                                     <Input />\n                                   )}\n                          </FormItem>\n                          <FormItem {...formItemLayout} label=\"Address\">\n                                     {getFieldDecorator('address', {\n                                         rules: [{\n                                             required: true, message: 'Please Please input your Address!',\n                                          whitespace: true }]\n                                      }) (\n                                         <Input />\n                              )}\n                          </FormItem>\n                          <FormItem {...formItemLayout} label=\"Capacity\">\n                                     {getFieldDecorator('capacity', {\n                                           rules: [{\n                                                   required: true, message: 'Please Please input your capacity!',\n                                           whitespace: true }]\n                                     }) (\n                                        <Input />\n                          )}\n                          </FormItem>\n                          <FormItem {...formItemLayout} label=\"Profile Photo\">\n                                                  {getFieldDecorator('profile', {\n                                                      rules: [{\n                                                      required: true, message: 'Please Please input your profile photo!',\n                                                      whitespace: true }]\n                                                  }) (\n                                                      <Upload importFile = {this.importFile}/>\n                                                  )}\n                                               </FormItem>\n                          <FormItem {...tailFormItemLayout}>\n                                     <Button type=\"primary\" htmlType=\"submit\">Register</Button>\n                                     <p>I already have an account, go back to <Link to=\"/login\">login</Link></p>\n                                   </FormItem>\n                                   </>)\n   }\n\n   getUserItem = () => {\n          const { getFieldDecorator } = this.props.form;\n          const prefixSelector = getFieldDecorator('prefix', {\n                initialValue: '1',\n              })(\n                <Select style={{ width: 70 }}>\n                  <Option value=\"1\">+1</Option>\n                  <Option value=\"44\">+44</Option>\n                  <Option value=\"49\">+49</Option>\n                  <Option value=\"86\">+86</Option>\n                  <Option value=\"91\">+91</Option>\n                </Select>\n              );\n\n          return (\n            <>\n                <FormItem\n                      {...formItemLayout}\n                      label=\"UserID\"\n                    >\n                      {getFieldDecorator('UserID', {\n                        rules: [{ required: true, message: 'Please input your userID!', whitespace: true }],\n                      })(\n                        <Input />\n                      )}\n                    </FormItem>\n                    <FormItem\n                      {...formItemLayout}\n                      label=\"Password\"\n                    >\n                      {getFieldDecorator('password', {\n                        rules: [{\n                          required: true, message: 'Please input your password!',\n                        }, {\n                          validator: this.validateToNextPassword,\n                        }],\n                      })(\n                        <Input type=\"password\" />\n                      )}\n                    </FormItem>\n                    <FormItem\n                      {...formItemLayout}\n                      label=\"Confirm Password\"\n                    >\n                      {getFieldDecorator('confirm', {\n                        rules: [{\n                          required: true, message: 'Please confirm your password!',\n                        }, {\n                          validator: this.compareToFirstPassword,\n                        }],\n                      })(\n                        <Input type=\"password\" onBlur={this.handleConfirmBlur} />\n                      )}\n                    </FormItem>\n                    <FormItem {...formItemLayout} label=\"Name\">\n                       {getFieldDecorator('name', {\n                         rules: [{\n                             required: true, message: 'Please Please input your name!',\n                         whitespace: true }]\n                       }) (\n                         <Input />\n                       )}\n                    </FormItem>\n                    <FormItem {...formItemLayout} label=\"Phone Number\">\n                              {getFieldDecorator('phone', {\n                                rules: [{\n                                    required: true, message: 'Please Please input your phone number!',\n                                whitespace: true }]\n                              }) (\n                                 <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\n                              )}\n                    </FormItem>\n                    <FormItem {...formItemLayout} label=\"Email Address\">\n                              {getFieldDecorator('email', {\n                                 rules: [{\n                                    required: true, message: 'Please Please input your Email Address!',\n                                 whitespace: true }]\n                              }) (\n                                <Input />\n                              )}\n                     </FormItem>\n                     <FormItem {...formItemLayout} label=\"Profile Photo\">\n                        {getFieldDecorator('profile', {\n                            rules: [{\n                            required: true, message: 'Please Please input your profile photo!',\n                            whitespace: true }]\n                        }) (\n                            <Upload importFile = {this.importFile}/>\n                        )}\n                     </FormItem>\n                     <FormItem {...tailFormItemLayout}>\n                                <Button type=\"primary\" htmlType=\"submit\">Register</Button>\n                                <p>I already have an account, go back to <Link to=\"/login\">login</Link></p>\n                              </FormItem>\n                              </>)\n   }\n\n\n   render() {\n\n              const formItemLayout = {\n                labelCol: {\n                  xs: { span: 24 },\n                  sm: { span: 8 },\n                },\n                wrapperCol: {\n                  xs: { span: 24 },\n                  sm: { span: 16 },\n                },\n              };\n     const Client  = this.state.Client;\n     const Items = Client === 'User' ? this.getUserItem : this.getResItem;\n\n     return (\n     <Form client={Client} onSubmit={this.handleSubmit} className=\"register-form\">\n\n                           <FormItem {...formItemLayout}>\n                              <Radio.Group defaultValue=\"User\" onChange={this.handleFormLayoutChange}>\n                                 <Radio.Button value=\"User\">User</Radio.Button>\n                                 <Radio.Button value=\"Restaurant\">Restaurant</Radio.Button>\n                              </Radio.Group>\n                           </FormItem>\n                           <Items />\n              </Form>)\n              ;\n   }\n  }\n\n  export const Register = Form.create()(RegistrationForm);"]},"metadata":{},"sourceType":"module"}